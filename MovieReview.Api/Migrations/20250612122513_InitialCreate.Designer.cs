// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieReview.Api.Data;
#nullable disable

namespace MovieReview.Api.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20250612122513_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bilim Kurgu"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Aksiyon"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Macera"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Dram"
                        });
                });

            modelBuilder.Entity("MovieGenres", b =>
                {
                    b.Property<int>("MoviesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GenresId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MoviesId", "GenresId");

                    b.HasIndex("GenresId");

                    b.ToTable("MovieGenres");

                    b.HasData(
                        new
                        {
                            MoviesId = 1,
                            GenresId = 1
                        },
                        new
                        {
                            MoviesId = 1,
                            GenresId = 2
                        },
                        new
                        {
                            MoviesId = 1,
                            GenresId = 3
                        },
                        new
                        {
                            MoviesId = 2,
                            GenresId = 1
                        },
                        new
                        {
                            MoviesId = 2,
                            GenresId = 2
                        });
                });

            modelBuilder.Entity("MovieReview.Api.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AverageRating")
                        .HasColumnType("REAL");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AverageRating = 0.0,
                            Director = "Christopher Nolan",
                            ReleaseYear = 2010,
                            Title = "Inception"
                        },
                        new
                        {
                            Id = 2,
                            AverageRating = 0.0,
                            Director = "Wachowskis",
                            ReleaseYear = 1999,
                            Title = "The Matrix"
                        });
                });

            modelBuilder.Entity("MovieReview.Api.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReviewerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "Harika bir film!",
                            MovieId = 1,
                            Rating = 5,
                            ReviewDate = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ReviewerName = "Ahmet"
                        },
                        new
                        {
                            Id = 2,
                            Comment = "Biraz kafa karıştırıcı ama etkileyici.",
                            MovieId = 1,
                            Rating = 4,
                            ReviewDate = new DateTime(2024, 5, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            ReviewerName = "Zeynep"
                        },
                        new
                        {
                            Id = 3,
                            Comment = "Sinema tarihinde bir devrim.",
                            MovieId = 2,
                            Rating = 5,
                            ReviewDate = new DateTime(2024, 5, 3, 0, 0, 0, 0, DateTimeKind.Utc),
                            ReviewerName = "Mehmet"
                        });
                });

            modelBuilder.Entity("MovieGenres", b =>
                {
                    b.HasOne("Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieReview.Api.Entities.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MovieReview.Api.Entities.Review", b =>
                {
                    b.HasOne("MovieReview.Api.Entities.Movie", "Movie")
                        .WithMany("Reviews")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MovieReview.Api.Entities.Movie", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
